import React from "react"
import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core';
import blank_image from '../../images/blank-class-image.png'
import clients_list from "./clients_list.css"
import store from "../../store";
import { Redirect } from "react-router";
import { withRouter } from 'react-router-dom'

class MetinClientsList extends React.Component {
    constructor(props){
        super(props)
        
    }
    render () {
        let metin_clients_list = this.props.clients.map( (client, i) => {
            return <MetinClient client={client} id={i} history={this.props.history}/>
        })
        //console.log(metin_clients_list)
        return (
            metin_clients_list
        )
    }
}


class MetinClient extends React.Component {
    constructor(props){
        super(props)
    }

    handleClickOnClient = (client) => {
        store.dispatch({type: 'SELECT_CLIENT', payload: client})
        console.log(store.getState())
        const { history } = this.props;
        if(history) history.push('/client');
    }

    render = () => {
        return (
            <>
            <Grid container xs={12} className='metin-client' onClick={()=>this.handleClickOnClient(this.props.client)}>
                    <Grid item>
                        <img src={blank_image}  className='metin-client-image' />
                    </Grid>
                    <Grid item>
                        <Typography> { this.props.client.player_name } lvl { this.props.client.player_level }</Typography>
                        <Typography> Current map: { this.props.client.player_curr_map } </Typography>
                        <Typography> Pos: ({ Math.round(this.props.client.player_position[0]/100) }, { Math.round(this.props.client.player_position[1]/100) }) </Typography>
                        <Typography> Experience: { this.props.client.player_experience }/{this.props.client.player_max_experience} {Math.round((this.props.client.player_experience/this.props.client.player_max_experience)*100)}%</Typography>
                    </Grid>

            </Grid>
            </>
        )
    }

}

export default withRouter(MetinClientsList) 