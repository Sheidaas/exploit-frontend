import { Grid, Tab }                                   from '@material-ui/core'
import React                                           from 'react'
import { HackbarAppBar, HackbarTabPanel, HackbarTabs } from '../hackbar_style/hackbar_style.js'
import ActionBot                                       from '../hacks/actionbot/actionbot'
import CharacterInfo                                   from '../hacks/character_status'
import Farmbot                                         from '../hacks/farmbot/farmbot.js'
import Fishbot                                         from '../hacks/fishbot/fishbot'
import Inventory                                       from '../hacks/inventory'
import Pickup                                          from '../hacks/pickup/pickup'
import Settings                                        from '../hacks/settings/settings'
import Shop                                            from '../hacks/shop/shop'
import Skillbot                                        from '../hacks/skillbot/skillbot'
import Waithack                                        from '../hacks/waithack/waithack'

import './metin_client_left_side.css'

function a11yProps( index ) {
    return {
        id: `simple-tab-${ index }`,
        'aria-controls': `simple-tabpanel-${ index }`,
    };
}

class MetinClientLeftSide extends React.Component {
    constructor( props ) {
        super(props)
        this.state = {
            currentTab: 0
        }
    }

    onChangeCurrentTab = ( e, new_tab ) => {
        this.setState({
            currentTab: new_tab
        })
    }

    render = () => /*console.log(this.props.hack_status)*/ (
        <Grid container className='metin-client-left-side-container'>
            <Grid item xs={ 12 }>
                <HackbarAppBar position="static">
                    <HackbarTabs value={ this.state.currentTab }
                                 onChange={ ( e, new_value ) => this.onChangeCurrentTab(e, new_value) }
                                 variant="scrollable"
                                 scrollButtons="auto"
                                 aria-label="scrollable"
                                 orientation="vertical"
                    >
                        <Tab label={ this.props.language.metinclientleftside.label_general } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientleftside.label_pickup } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientleftside.label_waithack } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientleftside.label_actions } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientleftside.label_fishbot } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientleftside.label_farmbot } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientleftside.label_skillbot } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientleftside.label_shop } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientrightside.label_character_info } { ...a11yProps } />
                        <Tab label={ this.props.language.metinclientrightside.label_inventory } { ...a11yProps } />
                    </HackbarTabs>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 0 } classes={ 'TabPanel' }>
                        <Settings socket={ this.props.socket } language={ this.props.language.settings }
                                  file_handler_language={ this.props.language.filehandler }/>
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 1 }>
                        <Pickup socket={ this.props.socket } settings={ this.props.hack_status.Settings }
                                item_list={ this.props.item_list } pickup_filter={ this.props.pickup_filter }
                                language={ this.props.language.pickup }
                                pickup_filter_lanuguage={ this.props.language.pickupfilter }
                                file_handler_language={ this.props.language.filehandler }
                                icon_names={ this.props.icon_names }/>
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 3 }>
                        <ActionBot socket={ this.props.socket } actionbot={ this.props.hack_status.ActionBot }
                                   language={ this.props.language.actionbot }
                                   auto_demon_tower_language={ this.props.language.autodemontower }
                                   energy_bot_language={ this.props.language.energybot }/>
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 2 }>
                        <Waithack socket={ this.props.socket } waithack={ this.props.hack_status.WaitHack }
                                  language={ this.props.language.waithack }/>
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 4 }>
                        <Fishbot socket={ this.props.socket } fishbot={ this.props.hack_status.FishBot }
                                 item_list={ this.props.item_list }
                                 language={ this.props.language.fishbot }
                                 new_catches_list_item_lanugage={ this.props.language.newcatcheslistitem }
                                 new_dead_fish_list_item_lanugage={ this.props.language.newdeadfishlistitem }/>
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 5 }>
                        <Farmbot socket={ this.props.socket } farmbot={ this.props.hack_status.FarmBot }
                                 language={ this.props.language.farmbot }
                                 file_handler_language={ this.props.language.filehandler }
                                 skill_list={ this.props.skill_list }
                                 pickup_language={ this.props.language.pickup }
                                 pickup_filter_lanuguage={ this.props.language.pickupfilter }
                                 file_handler_language={ this.props.language.filehandler }
                                 icon_names={ this.props.icon_names } item_list={ this.props.item_list }/>
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 6 }>
                        <Skillbot socket={ this.props.socket } skillbot={ this.props.hack_status.SkillBot }
                                  language={ this.props.language.skillbot }
                                  instances_list={ this.props.instances_list }
                                  character_status={ this.props.character_status }/>
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 7 }>
                        <Shop
                            socket={ this.props.socket }
                            language={ this.props.language }
                            scanned_shops={ this.props.scanned_shops }
                        />
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 8 }>
                        <CharacterInfo character_status={ this.props.character_status }
                                       language={ this.props.language } skill_list={ this.props.skill_list }/>
                    </HackbarTabPanel>
                    <HackbarTabPanel value={ this.state.currentTab } index={ 9 }>
                        <Inventory socket={ this.props.socket } language={ this.props.language.inventory }
                                   character_status={ this.props.character_status }/>
                    </HackbarTabPanel>
                </HackbarAppBar>
            </Grid>
        </Grid>
    )
}

export default MetinClientLeftSide