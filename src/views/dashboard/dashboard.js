import './dashboard.css'
import React from 'react'
import { Grid, Paper, Typography } from '@material-ui/core';
import store from '../../store.js'
import { Redirect } from 'react-router';
import moment from 'moment';
import MetinClientsList from '../../components/MetinClientsList/MetinClientsList';
import { connect } from 'react-redux';
import { ACTIONS } from '../../utils/enums.js';
import auth  from '../../utils/auth';

class Dashboard extends React.Component {
    constructor(props){
        super(props)
        this.SocketToLocalServer = this.props.socket
        this.state = {
            interval: setInterval(() => {
                this.getMetinClientList();
              }, 3000),
            metin_clients: [],
            selected_client_index: 0,
        }
    }

    getMetinClientList = () => {
        store.dispatch({type: ACTIONS.GET_METIN_CLIENT_LIST, client: this.SocketToLocalServer})
    }

    render () {
        if(!auth.getUserInfo().apiKey){
            return <Redirect to={'/login'}/>
        }
        
        return (
            <Grid container id='container' maxWidth='Fluid' spacing={1} justifyContent='center'>
                <Grid item xs={10} md={2}>
                    <Paper variant='outlined' square  className='user-info'>
                        <Typography> Hello, {auth.getUserInfo().username}</Typography>
                        <Grid item>
                            {GetIsUserPremiumAsString(auth.getUserInfo().premiumEnd)}
                        </Grid>
                        <Grid item>
                            <Typography> Your points:  {auth.getUserInfo().points}</Typography>
                        </Grid>
                    </Paper>
                </Grid>
                <Grid item xs={10} md={6}>
                <Paper variant='outlined' square>
                    <MetinClientsList clients={this.props.clients} socket={this.props.socket}/>
                </Paper>
                </Grid>
            </Grid>      
        );
    }
};

function mapStateToProps(state){
    //console.log(state)
    return {
        clients: state.receivePacketsReducer.clients
    }
}

function GetIsUserPremiumAsString(premiumEnd) {
    let is_user_premium = IsUserPremium(premiumEnd)

    if (is_user_premium){
        return (
            <Typography> You are Premium User untill {ParseEndDate(premiumEnd)}</Typography>
        )
    }
    else {
        return (
            <Typography> You are free user. Get premium here. </Typography>
        )
    }
}

function IsUserPremium(premiumEnd) {
    let end_date = new Date(premiumEnd)
    let now = Date.now()
    if( end_date.getTime() < now ){
        return false
    }
    return true
}

function ParseEndDate(_premiumEnd){
    let premium_end = new Date(_premiumEnd)
    return moment(premium_end).format("dddd, MMMM Do YYYY, hh:mm:ss a")

}

export default connect(mapStateToProps)(Dashboard) 