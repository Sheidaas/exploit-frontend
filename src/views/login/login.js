import './login.css'
import React from 'react'
import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core';
import { Link } from 'react-router-dom'
import store from '../../store.js'
import Description from '../../components/login-register-desc/desc'
import axios from 'axios';
import { Redirect, useHistory } from 'react-router';
import auth  from '../../utils/auth';
import { ACTIONS } from '../../utils/enums';

//    #fetch('http://136.244.118.103/login', user_data).then(this.handleErrors).then(
    //response => { 
//        let json_response = response.clone().json()
  //     console.log(json_response.data)
    //   this.handleSetUser(this.username, json_response)

   //}).catch( error => {
     //  console.log(error)
   //})

//

class Login extends React.Component {
    constructor(props){
        super(props)
        this.redirect = false
        this.username = ''
        this.password = ''

        this.handleOnUsernameChange = this.onUsernameChange.bind(this)
        this.handleOnPasswordChange = this.onPasswordChange.bind(this)
        this.handleOnLoginButton = this.onLoginButton.bind(this)
        this.handleSetUser = this.props._render.bind(this)
    }

    onUsernameChange(event) {
        this.username = event.target.value
    }

    onPasswordChange(event){
        this.password = event.target.value
    }

    handleErrors(response) {
        if (!response.ok) {
            throw Error();
        }
        return response;
    }

    onLoginButton(){
        let user_data = { 
            id: this.username,
            pass: this.password
        }
        axios.post('http://136.244.118.103/login', user_data).then(
            response => 
            {
            store.dispatch({type: 'LOGIN', payload: {
                username: this.username,
                apiKey: response.data.content.apiKey,
                isAdmin: response.data.content.isAdmin,
                points: response.data.content.points,
                premiumEnd: response.data.content.premiumEnd,
            }})
            this.handleSetUser()
            this.redirect = true
            this.forceUpdate()
            console.log(store.getState())
        }
            //this.handleSetUser(this.username, response.data.content)}
        ).catch( error => console.log(error))
    }

    render () {
        if(this.redirect || auth.getUserInfo().apiKey){
            return <Redirect to='/dashboard'/>
        }
        return (
            <Grid container id='container' maxWidth='Fluid' spacing={1}>
                <Grid item md={3}></Grid>
                    <Description />
                <Grid item xs={10} md={3} className="login-box">
                    <Paper className='login-display' variant='outlined' square>
                        <Grid item>
                            <div className='login-header'> Login </div>
                        </Grid>
                        <form>
                        <Grid item>
                            <Grid item className='login-input'>
                                <TextField required label='Username' helperText='Type here your username' onChange={ (e)=> this.handleOnUsernameChange(e)}></TextField>
                            </Grid>
                            <Grid item className='login-input'>
                                <TextField required label='Password' helperText='Type here your password' type='password' onChange={ (e)=> this.handleOnPasswordChange(e) }></TextField>
                            </Grid>
                            <Grid item className='login-input'>
                                <Button variant='outlined' onClick={ () => this.handleOnLoginButton()}> Log in </Button>
                            </Grid>
                        </Grid>
                        <Grid item className='login-links'>
                            <Link to='/signup'>
                                <Grid item className='link'>
                                    <Typography> Sign up </Typography>
                                </Grid>
                            </Link>
                            <Link to='/password_reset'>
                            <Grid item className='link'>
                                <Typography> Do you forget your password? </Typography>
                            </Grid>
                            </Link>
                        </Grid>
                        </form>

                    </Paper>
                </Grid>
            </Grid>      
        );
    }
}

export default Login